<!DOCTYPE html>
<html>
<head>
<title>user_guide.md</title>
<meta http-equiv="Content-type" content="text/html;charset=UTF-8">

<style>
/* https://github.com/microsoft/vscode/blob/master/extensions/markdown-language-features/media/markdown.css */
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/

body {
	font-family: var(--vscode-markdown-font-family, -apple-system, BlinkMacSystemFont, "Segoe WPC", "Segoe UI", "Ubuntu", "Droid Sans", sans-serif);
	font-size: var(--vscode-markdown-font-size, 14px);
	padding: 0 26px;
	line-height: var(--vscode-markdown-line-height, 22px);
	word-wrap: break-word;
}

#code-csp-warning {
	position: fixed;
	top: 0;
	right: 0;
	color: white;
	margin: 16px;
	text-align: center;
	font-size: 12px;
	font-family: sans-serif;
	background-color:#444444;
	cursor: pointer;
	padding: 6px;
	box-shadow: 1px 1px 1px rgba(0,0,0,.25);
}

#code-csp-warning:hover {
	text-decoration: none;
	background-color:#007acc;
	box-shadow: 2px 2px 2px rgba(0,0,0,.25);
}

body.scrollBeyondLastLine {
	margin-bottom: calc(100vh - 22px);
}

body.showEditorSelection .code-line {
	position: relative;
}

body.showEditorSelection .code-active-line:before,
body.showEditorSelection .code-line:hover:before {
	content: "";
	display: block;
	position: absolute;
	top: 0;
	left: -12px;
	height: 100%;
}

body.showEditorSelection li.code-active-line:before,
body.showEditorSelection li.code-line:hover:before {
	left: -30px;
}

.vscode-light.showEditorSelection .code-active-line:before {
	border-left: 3px solid rgba(0, 0, 0, 0.15);
}

.vscode-light.showEditorSelection .code-line:hover:before {
	border-left: 3px solid rgba(0, 0, 0, 0.40);
}

.vscode-light.showEditorSelection .code-line .code-line:hover:before {
	border-left: none;
}

.vscode-dark.showEditorSelection .code-active-line:before {
	border-left: 3px solid rgba(255, 255, 255, 0.4);
}

.vscode-dark.showEditorSelection .code-line:hover:before {
	border-left: 3px solid rgba(255, 255, 255, 0.60);
}

.vscode-dark.showEditorSelection .code-line .code-line:hover:before {
	border-left: none;
}

.vscode-high-contrast.showEditorSelection .code-active-line:before {
	border-left: 3px solid rgba(255, 160, 0, 0.7);
}

.vscode-high-contrast.showEditorSelection .code-line:hover:before {
	border-left: 3px solid rgba(255, 160, 0, 1);
}

.vscode-high-contrast.showEditorSelection .code-line .code-line:hover:before {
	border-left: none;
}

img {
	max-width: 100%;
	max-height: 100%;
}

a {
	text-decoration: none;
}

a:hover {
	text-decoration: underline;
}

a:focus,
input:focus,
select:focus,
textarea:focus {
	outline: 1px solid -webkit-focus-ring-color;
	outline-offset: -1px;
}

hr {
	border: 0;
	height: 2px;
	border-bottom: 2px solid;
}

h1 {
	padding-bottom: 0.3em;
	line-height: 1.2;
	border-bottom-width: 1px;
	border-bottom-style: solid;
}

h1, h2, h3 {
	font-weight: normal;
}

table {
	border-collapse: collapse;
}

table > thead > tr > th {
	text-align: left;
	border-bottom: 1px solid;
}

table > thead > tr > th,
table > thead > tr > td,
table > tbody > tr > th,
table > tbody > tr > td {
	padding: 5px 10px;
}

table > tbody > tr + tr > td {
	border-top: 1px solid;
}

blockquote {
	margin: 0 7px 0 5px;
	padding: 0 16px 0 10px;
	border-left-width: 5px;
	border-left-style: solid;
}

code {
	font-family: Menlo, Monaco, Consolas, "Droid Sans Mono", "Courier New", monospace, "Droid Sans Fallback";
	font-size: 1em;
	line-height: 1.357em;
}

body.wordWrap pre {
	white-space: pre-wrap;
}

pre:not(.hljs),
pre.hljs code > div {
	padding: 16px;
	border-radius: 3px;
	overflow: auto;
}

pre code {
	color: var(--vscode-editor-foreground);
	tab-size: 4;
}

/** Theming */

.vscode-light pre {
	background-color: rgba(220, 220, 220, 0.4);
}

.vscode-dark pre {
	background-color: rgba(10, 10, 10, 0.4);
}

.vscode-high-contrast pre {
	background-color: rgb(0, 0, 0);
}

.vscode-high-contrast h1 {
	border-color: rgb(0, 0, 0);
}

.vscode-light table > thead > tr > th {
	border-color: rgba(0, 0, 0, 0.69);
}

.vscode-dark table > thead > tr > th {
	border-color: rgba(255, 255, 255, 0.69);
}

.vscode-light h1,
.vscode-light hr,
.vscode-light table > tbody > tr + tr > td {
	border-color: rgba(0, 0, 0, 0.18);
}

.vscode-dark h1,
.vscode-dark hr,
.vscode-dark table > tbody > tr + tr > td {
	border-color: rgba(255, 255, 255, 0.18);
}

</style>

<style>
/* Tomorrow Theme */
/* http://jmblog.github.com/color-themes-for-google-code-highlightjs */
/* Original theme - https://github.com/chriskempson/tomorrow-theme */

/* Tomorrow Comment */
.hljs-comment,
.hljs-quote {
	color: #8e908c;
}

/* Tomorrow Red */
.hljs-variable,
.hljs-template-variable,
.hljs-tag,
.hljs-name,
.hljs-selector-id,
.hljs-selector-class,
.hljs-regexp,
.hljs-deletion {
	color: #c82829;
}

/* Tomorrow Orange */
.hljs-number,
.hljs-built_in,
.hljs-builtin-name,
.hljs-literal,
.hljs-type,
.hljs-params,
.hljs-meta,
.hljs-link {
	color: #f5871f;
}

/* Tomorrow Yellow */
.hljs-attribute {
	color: #eab700;
}

/* Tomorrow Green */
.hljs-string,
.hljs-symbol,
.hljs-bullet,
.hljs-addition {
	color: #718c00;
}

/* Tomorrow Blue */
.hljs-title,
.hljs-section {
	color: #4271ae;
}

/* Tomorrow Purple */
.hljs-keyword,
.hljs-selector-tag {
	color: #8959a8;
}

.hljs {
	display: block;
	overflow-x: auto;
	color: #4d4d4c;
	padding: 0.5em;
}

.hljs-emphasis {
	font-style: italic;
}

.hljs-strong {
	font-weight: bold;
}
</style>

<style>
/*
 * Markdown PDF CSS
 */

 body {
	font-family: -apple-system, BlinkMacSystemFont, "Segoe WPC", "Segoe UI", "Ubuntu", "Droid Sans", sans-serif, "Meiryo";
	padding: 0 12px;
}

pre {
	background-color: #f8f8f8;
	border: 1px solid #cccccc;
	border-radius: 3px;
	overflow-x: auto;
	white-space: pre-wrap;
	overflow-wrap: break-word;
}

pre:not(.hljs) {
	padding: 23px;
	line-height: 19px;
}

blockquote {
	background: rgba(127, 127, 127, 0.1);
	border-color: rgba(0, 122, 204, 0.5);
}

.emoji {
	height: 1.4em;
}

code {
	font-size: 14px;
	line-height: 19px;
}

/* for inline code */
:not(pre):not(.hljs) > code {
	color: #C9AE75; /* Change the old color so it seems less like an error */
	font-size: inherit;
}

/* Page Break : use <div class="page"/> to insert page break
-------------------------------------------------------- */
.page {
	page-break-after: always;
}

</style>

<script src="https://unpkg.com/mermaid/dist/mermaid.min.js"></script>
</head>
<body>
  <script>
    mermaid.initialize({
      startOnLoad: true,
      theme: document.body.classList.contains('vscode-dark') || document.body.classList.contains('vscode-high-contrast')
          ? 'dark'
          : 'default'
    });
  </script>
<p>📝 User Guide – ID Card Generator</p>
<ol>
<li>🧩 Layout Editor
Step 1: Prepare the 'Photos' Folder</li>
</ol>
<p>Create a folder named Photos. Inside it, if needed, create subfolders like qrcode, signature, and barcode.</p>
<p>Place all images inside these folders named as 1.jpg, 2.jpg, 3.jpg, etc.</p>
<p>The image name must match the Roll No. in the CSV file.</p>
<p>Step 2: Add the CSV File</p>
<p>The CSV file must be named students.csv. Its structure should be like this:</p>
<p>css
Copy
Edit
Roll No,Name,Class,Address,Mobile No
1,Amit Sharma,10-A,A-12 sagar avenue GST Road,989xxxxx0
2,Neha Verma,9-B,10 Maruti Society,999xxxxx2
3,Ravi Kumar,8-C,A-1 Ramnagar,97xxxxxxx5
4,Saila Singh,11-B,Street No 2,77xxxxxxx4
The first column must always be Roll No, which links each student to their corresponding photo (1.jpg, 2.jpg, etc.).</p>
<p>After selecting your CSV file, click Upload. Once done, you may delete it.</p>
<p>Step 3: Upload Template</p>
<p>Upload your ID card design in JPG format (300 DPI) using the Template button.</p>
<p>The template should be in actual ID card size.</p>
<p>Step 4: Add Fields</p>
<p>Click Add Field to create fields like photos and text.</p>
<p>For photo fields, type = image. You can customize:</p>
<p>Border (color/thickness)</p>
<p>Rounded corners</p>
<p>For text fields, use the same name as the CSV column (e.g., Name, Class, etc.).</p>
<p>Step 5: Save Layout</p>
<p>Click the Save Layout button to save your field positions and template setup.</p>
<p>Step 6: Preview</p>
<p>Click the Preview button to view a sample card on the right side.</p>
<p>Use Download Sample to download a preview card.</p>
<p>Step 7: Final Download</p>
<p>If everything looks good in the preview, click Download Cards to export:</p>
<p>Individual cards</p>
<p>A4-sized sheets of cards</p>
<ol start="2">
<li>🧼 Background Remover
This tool lets you remove backgrounds from multiple photos at once.</li>
</ol>
<p>You can crop the image and apply a solid or gradient background color.</p>
<ol start="3">
<li>📸 Camera Photo
Use your webcam to capture photos directly.</li>
</ol>
<p>The system auto-crops and centers the face in the frame.</p>
<p>🧩 1. Layout Editor (लेआउट एडिटर)
📁 Step 1: Photos Folder तैयार करें
🔹 Photos नाम का एक फोल्डर बनाएं
🔹 ज़रूरत हो तो इसके अंदर 3 सब-फोल्डर भी बना सकते हैं:</p>
<p>qrcode/ 📷</p>
<p>signature/ ✍️</p>
<p>barcode/ 🧾</p>
<p>👉 हर फोटो का नाम 1.jpg, 2.jpg, 3.jpg... इस सीरीज़ में होना चाहिए।
CSV फाइल में दिया गया Roll No. ही फाइल नाम से मैच किया जाएगा।</p>
<p>उदाहरण:</p>
<p>markdown
Copy
Edit
Photos/
├── 1.jpg
├── 2.jpg
├── qrcode/
│   ├── 1.jpg
│   └── 2.jpg
├── signature/
│   ├── 1.jpg
├── barcode/
└── 1.jpg
📌 फिर &quot;📁 Choose Photos&quot; बटन पर क्लिक करें → &quot;Upload&quot; दबाएं → Folder upload हो जाएगा
✅ काम पूरा होने के बाद फोटो delete करना न भूलें।</p>
<p>📄 Step 2: CSV फ़ाइल तैयार करें
🔸 CSV का नाम हमेशा students.csv ही रखें।
🔸 Format ऐसा रखें:</p>
<p>css
Copy
Edit
Roll No,Name,Class,Address,Mobile No
1,Amit Sharma,10-A,A-12 Sagar Avenue GST Road,989xxxxx0
2,Neha Verma,9-B,10 Maruti Society,999xxxxx2
3,Ravi Kumar,8-C,A-1 Ramnagar,97xxxxxxx5
4,Saila Singh,11-B,Street No. 2,77xxxxxxx4
✅ पहली column में Roll No. दें — वही number फ़ोटो नाम से match होगा
✅ CSV की बाकी fields आप अपनी जरूरत के अनुसार बढ़ा सकते हैं
🔍 Roll No 1 के लिए 1.jpg फोटो, Roll No 2 के लिए 2.jpg, आदि</p>
<p>📌 &quot;📄 Choose CSV&quot; → &quot;Upload&quot; दबाएं → CSV file upload हो जाएगी
✅ काम पूरा होने के बाद फाइल delete कर देना बेहतर रहेगा।</p>
<p>🎨 Step 3: Template Upload करें
🖼 जो भी ID Card का डिज़ाइन है, उसे JPG format में 300 DPI resolution के साथ upload करें।
⚠️ Template का size actual ID size के अनुसार ही होना चाहिए।
🔘 &quot;Template&quot; बटन से upload करें।</p>
<p>✏️ Step 4: Field जोड़ें
➕ &quot;Add Field&quot; बटन पर क्लिक करके ज़रूरी fields जोड़ें:</p>
<p>अगर फोटो दिखाना है: field का size set करें और Type = image चुनें</p>
<p>📏 Border देना हो तो: border thickness, corner radius, और color सेट करें</p>
<p>✍️ Text fields के लिए: CSV में जो heading है, वही field name में दें (जैसे Name, Class, Mobile No.)</p>
<p>💡 हर field को आप mouse से कार्ड पर खींचकर सही जगह set कर सकते हैं।</p>
<p>💾 Step 5: Save Layout
🧷 &quot;Save Layout&quot; बटन पर क्लिक करें।
यह आपके डिज़ाइन का JSON फ़ॉर्मेट में layout बना देगा।</p>
<p>🔍 Step 6: Preview
👁 &quot;Preview&quot; बटन पर क्लिक करें — आपको साइड में कार्ड का live preview दिखेगा
📥 &quot;Download Sample&quot; से sample ID card को डाउनलोड भी कर सकते हैं।</p>
<p>🖨 Step 7: Final Download
📤 &quot;Download&quot; बटन दबाएं:
आपको दो तरह की files मिलेंगी:</p>
<p>✅ Single card images</p>
<p>✅ A4 size sheets में set की गई JPG file (printing के लिए ready)</p>
<p>🎭 2. Background Remover
🖼 यहाँ आप एक साथ कई फोटो का background हटा सकते हैं
✂️ साथ ही crop करके चेहरे को अच्छे से center में भी रख सकते हैं
🎨 Optionally background color या gradient भी जोड़ सकते हैं।</p>
<p>📸 3. Camera Photo
📷 आप सीधे software में वेबकैम से live photo खींच सकते हैं
🧍 Face detection के साथ crop automatic हो जाता है।</p>
<p>✅ सुझाव
हमेशा high quality photos इस्तेमाल करें</p>
<p>CSV में कोई column न छोड़े</p>
<p>Template 300 DPI का रखें</p>

</body>
</html>
